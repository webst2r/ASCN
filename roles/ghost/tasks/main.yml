---
- name: Create address 
  gcp_compute_address:
    name: 'ghost-address'
    region: us-central1
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address 


- name: Updating App Variables 
  ansible.builtin.set_fact:
    ghost_ip : "{{ address.address }}"
    ghost_port : 80


- name: Create Ghost Service 
  kubernetes.core.k8s:
    state: present 
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ghost-blog
        namespace: "{{ namespace }}"
      spec:
        loadBalancerIP: "{{ address.address }}"
        type: LoadBalancer
        selector:
          app: ghost-blog
        ports:
        - protocol: TCP
          port: 80
          targetPort: "{{ default_ghost_port }}"


- name: Create persistent volume storage 
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
         name: ghost-pvclaim
         namespace: "{{ namespace }}"
      spec:
         accessModes:
         - ReadWriteOnce
         resources:
            requests:
              storage: 10Gi


- name: Deploy ghost
  kubernetes.core.k8s:
    state: present 
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
          name: ghost-blog
          namespace: "{{ namespace }}"
          labels:
              app: ghost-blog
      spec:
          replicas: "{{ n_replicas }}"
          selector:
              matchLabels:
                  app: ghost-blog
          template:
              metadata:
                  labels:
                      app: ghost-blog
              spec:
                  containers:
                  - name: ghost-blog
                    image: "{{ ghost_image_version }}"
                    imagePullPolicy: Always
                    ports:
                      - containerPort: "{{ default_ghost_port }}"
                    env:
                      - name: database__client
                        value: mysql
                      - name: database__connection__host
                        value: ghost-mysql
                      - name: database__connection__user
                        value: "{{ database_user }}"
                      - name: database__connection__password
                        valueFrom:
                          secretKeyRef:
                            name: ghost-data
                            key: password
                      - name: database__connection__database
                        value: "{{ database }}"
                      - name: url
                        value: "http://{{ ghost_ip }}/"
                      - name: mail__transport
                        value: SMTP
                      - name: mail__options__secure
                        value: "false"
                      - name: mail__options__service
                        value: "Mailtrap"
                      - name: mail__options__host
                        value: "smtp.mailtrap.io"
                      - name: mail__options__port 
                        value: "2525"
                      - name: mail__options__auth__user
                        value: "{{ username_mailtrap }}"
                      - name: mail__options__auth__pass
                        valueFrom:
                          secretKeyRef:
                            name: ghost-data
                            key: passwordMailtrap
                    volumeMounts:
                    - mountPath: /var/lib/ghost/content
                      name: ghost-pvclaim
                  volumes:
                  - name: ghost-pvclaim
                    persistentVolumeClaim:
                      claimName: ghost-pvclaim

# Serve para descobrir o nome dos pods onde estão o mysql para depois criarmos uma conta admin
- name: Search for all pods from mysql 
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app = ghost
      - tier in (mysql)
  register: mysql_pod

- name: Wait
  wait_for:
    timeout: 120

# Nota: Neste momento só está a executar num pod só, é mudar a parte da password para usar através de secret
- name: Creating admin account 
  kubernetes.core.k8s_exec:
    namespace: "{{ namespace }}"
    pod: "{{ mysql_pod.resources[0].metadata.name }}"
    command: mysql -h localhost -u ghost -p'Password$123456' -e 'use ghost; update users set name="ascn", password="\$2b\$10\$Z9SYrWRxf7i0dzx6jC.39uIQVtQqpUTGhRmqEkHhrKlewPRxy9MU.", email="ascn@example.com", status="active" where id=1;'
     
     
    #command: mysql -h localhost -u ghost -p'Password$123456' -e 'use ghost; update users set name="ascn", password="\$2b\$10\$Z9SYrWRxf7i0dzx6jC.39uIQVtQqpUTGhRmqEkHhrKlewPRxy9MU.", email="ascn@example.com", status="active" where id=1;'
  #register: admin_created
  #until: "admin_created is not failed"
  #retries: 5 
  #delay: 20
